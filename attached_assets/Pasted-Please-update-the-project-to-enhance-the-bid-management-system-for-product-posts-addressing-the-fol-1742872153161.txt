Please update the project to enhance the bid management system for product posts, addressing the following points:

Comprehensive Bid Display on User Side:

Modify the user interface to display a complete list of all business bids for each product post. Each bid must include detailed bidder information (name, profile, etc.), bid amount, and product details.

Organize these bids under an “Active Bids” section, sorted in ascending order based on bid amount.

Accepting and Rejecting Bids with Dynamic Status Updates:

Allow users to accept or reject individual bids.

When a bid is accepted, move it to an “Accepted Bids” list within the active bids filter and update its status to “accepted” on the backend. Notify the corresponding business that their bid has been accepted.

If the user later accepts a different bid with a lower amount than a previously accepted bid, update the status of the initial bid to indicate it was replaced, and notify that business that the customer chose a more competitive offer.

If the user rejects a bid, provide a “Revive Bid” option that lets the business submit an improved bid.

Business Bid Enhancements and Product Image Visibility:

Enable business profiles to attach a product image along with their bid submission.

Ensure that when a user creates a product post, the uploaded product image is stored and correctly displayed on the business dashboard, so businesses can clearly view the product they are bidding on.

Keep the product post active for bidding until the user explicitly ends the post, allowing multiple bids and bid updates over time.

Backend and Frontend Integration:

Update the relevant API endpoints (in files like Server/controllers/productController.ts and related routes) to handle bid acceptance, rejection, status updates, and to notify businesses accordingly.

Modify the frontend components (such as in Client/src/pages/ProductPostDetails.tsx and associated bid listing components) to:

Display all bid details.

Provide buttons for accepting, rejecting, and reviving bids.

Dynamically update the bid list as bid statuses change.

Add inline comments throughout the code to explain each section of logic.

The goal is to create a seamless interaction where users can manage bids effectively, and businesses receive real-time updates about their bids, all while ensuring that the product images posted by users are clearly visible to the businesses bidding on them.